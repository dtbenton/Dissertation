P_tall$hab.min.3 = NULL
P_tall$sex = as.factor(P_tall$sex)
P_tall$group = as.factor(P_tall$group)
P_tall$age = as.factor(P_tall$age)
P_tall$med.split.age = as.factor(P_tall$med.split.age)
P_tall$hab.stim.order = as.factor(P_tall$hab.stim.order)
P_tall$test.stim.order = as.factor(P_tall$test.stim.order)
P_tall$test.trial.level = as.factor(P_tall$test.trial.level)
prepost = ezANOVA(P_tall, dv = measure, between = .(sex, group, test.stim.order,
test.trial.level), wid = ID,
between_covariates=age)
print(prepost)
P_tall = reshape(D, varying = c(22:23), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
P_tall = P_tall[order(P_tall$ID),]
dim(P_tall)
P_tall$sex = as.factor(P_tall$sex)
P_tall$group = as.factor(P_tall$group)
P_tall$age = as.factor(P_tall$age)
P_tall$med.split.age = as.factor(P_tall$med.split.age)
P_tall$hab.stim.order = as.factor(P_tall$hab.stim.order)
P_tall$test.stim.order = as.factor(P_tall$test.stim.order)
P_tall$test.trial.level = as.factor(P_tall$test.trial.level)
names(P_tall)
?ezANOVA
prepost = ezANOVA(P_tall, dv = measure, between = .(sex, group, test.stim.order),
within = test.trial.level, wid = ID,
between_covariates=age)
print(prepost)
lme.fit.prelim = lme(measure~(test.trial.level+group+test.stim.order+test.trial.level)^4,random=~1|ID,
na.action=na.exclude, data=P_tall)
anova.lme(lme.fit.prelim)
mean(P_tall$measure)
fix(P_tall)
fix(P_tall, na.action=na.exclude)
mean(P_tall$measure, na.action=na.exclude)
lme.fit.prepost = lme(measure~(test.trial.level+group+sex+test.stim.order+test.trial.level)^4,random=~1|ID,
na.action=na.exclude, data=P_tall)
anova.lme(lme.fit.prepost)
dim(F_tall)
dim(P)
dim(P_tall)
P_tall$measure[P_tall$test.trial.level=="1"]
mean(P_tall$measure[P_tall$test.trial.level=="1"])
mean(P_tall$measure[P_tall$test.trial.level=="2"])
mean(P_tall$measure[P_tall$test.trial.level=="0"])
fix(P_tall)
mean(P_tall$measure[P_tall$test.trial.level=="2"], na.rm = TRUE)
mean(P_tall$measure[P_tall$test.trial.level=="1"])
sd(P_tall$measure[P_tall$test.trial.level=="1"])
# posttest mean and SD
mean(P_tall$measure[P_tall$test.trial.level=="2"], na.rm = TRUE)
sd(P_tall$measure[P_tall$test.trial.level=="2"], na.rm = TRUE)
mean(D_tall$num.hab)
set.seed(2018)
num.hab.mean = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$num.hab)
return(dif.1)
}
dif.num.hab = boot(D_tall, num.hab.mean, R=5000)
dif.num.hab
dif.num.hab.mean = 6.28125  + 1.96*c(-0.1883883, 0.1883883)
dif.num.hab.mean
set.seed(2018)
ttl.hab.mean = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$ttl.hab)
return(dif.1)
}
dif.ttl.hab = boot(D_tall, ttl.hab.mean, R=5000)
dif.ttl.hab
dif.ttl.hab.mean = 84.22813  + 1.96*c(-3.848969, 3.848969)
dif.ttl.hab.mean
ez.ttl.hab = ezANOVA(D_tall, dv = ttl.hab, between = .(sex, group, test.stim.order),
wid = ID)
print(ez.ttl.hab)
ez.num.hab = ezANOVA(D_tall, dv = num.hab, between = .(sex, group, test.stim.order),
wid = ID)
print(ez.num.hab)
ancova.ttl.hab = ezANOVA(D_tall, dv = ttl.hab, between = .(sex, group, test.stim.order),
wid = ID,
between_covariates=age)
print(ancova.ttl.hab)
ancova.num.hab = ezANOVA(D_tall, dv = num.hab, between = .(sex, group, test.stim.order),
wid = ID,
between_covariates=age)
print(ancova.num.hab)
age.assump.aov = aov(age~test.trial.level, data=D_tall)
summary(age.assump.aov)
ancova.homo.check = lme(measure~test.trial.level+age+test.trial.level:age,
random=~1|ID, data=D_tall)
aov.ancova.homo.check = anova.lme(ancova.homo.check)
aov.ancova.homo.check
ancova.main.fit = ezANOVA(D_tall, dv = measure, within=test.trial.level,
wid = ID,
between_covariates=age)
print(ancova.main.fit)
means_vec = rep(0,4)
for(i in 1:length(means_vec)){
calc= mean(D_tall$measure[D_tall$test.trial.level==i])
means_vec[i] = calc
}
means_vec
head(D_tall)
means_vec = rep(0,4)
for(i in c(gbgr,grgb,gbrg,grbg))){
calc= mean(D_tall$measure[D_tall$test.trial.level==i])
means_vec[i] = calc
}
means_vec
means_vec = rep(0,4)
for(i in c(gbgr,grgb,gbrg,grbg)){
calc= mean(D_tall$measure[D_tall$test.trial.level==i])
means_vec[i] = calc
}
means_vec
names(D)
means_vec = rep(0,4)
for(i in 18:21){
calc = mean(D[,i])
means_vec[i] = calc
}
means_vec
means_vec = rep(0,4)
for(i in D[,18:21]){
calc = mean(D[,i])
means_vec[i] = calc
}
means_vec
D[,18:21]
means = D[,18:21]
for(i in means){
calc = mean(D[,i])
means_vec[i] = calc
}
means_vec
means_vec = rep(0,4)
means = D[,c(18:21)]
for(i in means){
calc = mean(D[,i])
means_vec[i] = calc
}
means_vec
means_vec = rep(0,4)
for(i in 18:21){
calc = mean(D[,i])
means_vec[i] = calc
}
means_vec
k=1
comb_vec = rep(0,25)
for(i in 1:5){
for(j in 1:5){
calc = (mean(D_tall_2$measure[D_tall_2$test.trial.level==i])-
mean(D_tall_2$measure[D_tall_2$test.trial.level==j]))
comb_vec[k] = calc
k = k+1
}
}
D_tall_2 = reshape(D, varying = c(18:21), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall_2 = D_tall_2[order(D_tall_2$ID),]
k=1
comb_vec = rep(0,25)
for(i in 1:5){
for(j in 1:5){
calc = (mean(D_tall_2$measure[D_tall_2$test.trial.level==i])-
mean(D_tall_2$measure[D_tall_2$test.trial.level==j]))
comb_vec[k] = calc
k = k+1
}
}
comb_vec
k=1
comb_vec = rep(0,16)
for(i in 1:4){
for(j in 1:4){
calc = (mean(D_tall_2$measure[D_tall_2$test.trial.level==i],na.rm = TRUE)-
mean(D_tall_2$measure[D_tall_2$test.trial.level==j],na.rm = TRUE))
comb_vec[k] = calc
k = k+1
}
}
comb_vec
boot_mean = as.data.frame(matrix(NA, nrow=4, ncol=3, byrow=TRUE))
for(i in 1:nrow(boot_mean)){ # want number of iterations to equal number of rows, especially because we're filling in by row
set.seed(2018)
boot_func = function(data,b,formula, p){
d= data[b,]
x = d$measure[d$test.trial.level==i]
dif.1 =  mean(x, data=D_tall_2)
return(dif.1)
}
boot_main = boot(D_tall_2, boot_func, R=5000)
boot_mean[i,] = c(boot_main$t0, boot_main$t0  + 1.96*-sd(boot_main$t),
boot_main$t0  + 1.96*sd(boot_main$t))
}
boot_mean
main_perm_func = function(y){
df = subset(D_tall_2, ! test.trial.level %in% y)
df$test.trial.level = factor(GBGRVGRGB$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
main_perm_func(c(3:5))
df$test.trial.level = factor(GBGRVGRGB$test.trial.level)
main_perm_func = function(y){
df = subset(D_tall_2, ! test.trial.level %in% y)
#df$test.trial.level = factor(GBGRVGRGB$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
main_perm_func(c(3:5))
main_perm_func = function(y){
df = subset(D_tall_2, ! test.trial.level %in% y)
df$test.trial.level = factor(df$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
# GBGR V GRGB
main_perm_func(c(3:5))
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(ez)
options(scipen=9999)
# load data
D = read.csv(file.choose(), header = TRUE)
# add median split age column
D$med.split.age = rep(0,length(D$age))
for(i in 1:length(D$age)){
compute = ifelse(D$age[i]<=19.02,0,1)
D$med.split.age[i] = compute
}
# add median split for num.hab
D$med.split.num.hab = rep(0, length(D$num.hab))
for(i in 1:length(D$num.hab)){
calc = ifelse(D$num.hab[i]<=5,0,1)
D$med.split.num.hab[i] = calc
}
# remove unneeded columns
D$Partic..= NULL
names(D)
# reorder columns
D = as.data.frame(D[,c(1,2,6,22,3,4,
5,7,23,8,9:21)])
names(D)
# delete redundant med.split.age column
D$med.split.age.1 = NULL
# convert data from "wide" format to "tall" format
D_tall = reshape(D, varying = c(18:21), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall = D_tall[order(D_tall$ID),]
# FACTORIZE 'SEX'
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("0" = "F", "1"="M"))
# FACTORIZE 'TEST.STIM.ORDER'
D_tall$test.stim.order = revalue(x = as.factor(D_tall$test.stim.order),
c("0" = "1234", "1" = "2413"))
# FACTORIZE 'MED.SPLIT.NUM.HAB'
D_tall$med.split.num.hab = revalue(x = as.factor(D_tall$med.split.num.hab),
c("0" = "Fast Habituators", "1" = "Slow Habituators"))
# FACTORIZE 'GROUP'
D_tall$group = revalue(x = as.factor(D_tall$group),
c("0" = "Red", "1" = "Blue"))
# FACTORIZE 'HAB.STIM.ORDER'
D_tall$hab.stim.order = revalue(x = as.factor(D_tall$hab.stim.order),
c("0" = "12", "1"="21", "2"="34", "3"="43"))
# FACTORIZE 'TEST.TRIAL.LEVEL'
D_tall$test.trial.level = revalue(x = as.factor(D_tall$test.trial.level),
c("1" = "gbgr", "2"="grgb",
"3"="gbrg", "4"="grbg"))
names(D_tall)
df = subset(D_tall_2, ! test.trial.level %in% y)
df$test.trial.level = factor(df$test.trial.level)
D_tall_2 = reshape(D, varying = c(18:21), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall_2 = D_tall_2[order(D_tall_2$ID),]
df = subset(D_tall_2, ! test.trial.level %in% y)
df$test.trial.level = factor(df$test.trial.level)
main_perm_func = function(y){
df = subset(D_tall_2, ! test.trial.level %in% y)
df$test.trial.level = factor(df$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
main_perm_func(c(3:5))
main_perm_func(y = c(3:5))
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(ez)
options(scipen=9999)
# load data
D = read.csv(file.choose(), header = TRUE)
D$med.split.age = rep(0,32)
for(i in 1:32){
compute = ifelse(D$age[i]<=18.06,0,1)
D$med.split.age[i] = compute
}
# add median split for num.hab
D$med.split.num.hab = rep(0, 32)
for(i in 1:32){
calc = ifelse(D$num.hab[i]<=5,0,1)
D$med.split.num.hab[i] = calc
}
# reorder columns
D = as.data.frame(D[,c(1:6,22,7:23)])
D$med.split.age.1 = NULL
D_tall = reshape(D, varying = c(17:20,22), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall = D_tall[order(D_tall$ID),]
D_tall$sex = as.factor(D_tall$sex)
D_tall$group = as.factor(D_tall$group)
D_tall$med.split.age = as.factor(D_tall$med.split.age)
D_tall$hab.stim.order = as.factor(D_tall$hab.stim.order)
D_tall$test.stim.order = as.factor(D_tall$test.stim.order)
D_tall$test.trial.level = as.factor(D_tall$test.trial.level)
# reorder columns of D_tall
D_tall = as.data.frame(D_tall[,c(1:2,4:18,3,19)])
main_perm_func = function(y){
df = subset(D_tall, ! test.trial.level %in% y)
df$test.trial.level = factor(GBGRVGRGB$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
main_perm_func(c(3:5))
names(D_tall)
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(ez)
options(scipen=9999)
# load data
D = read.csv(file.choose(), header = TRUE)
D$med.split.age = rep(0,32)
for(i in 1:32){
compute = ifelse(D$age[i]<=18.06,0,1)
D$med.split.age[i] = compute
}
# add median split for num.hab
D$med.split.num.hab = rep(0, 32)
for(i in 1:32){
calc = ifelse(D$num.hab[i]<=5,0,1)
D$med.split.num.hab[i] = calc
}
names(D)
# convert data from "wide" format to "tall" format
D_tall = reshape(D, varying = c(17:20,22), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall = D_tall[order(D_tall$ID),]
# set appropriate factor variables in "tall" data
D_tall$sex = as.factor(D_tall$sex)
D_tall$group = as.factor(D_tall$group)
D_tall$med.split.age = as.factor(D_tall$med.split.age)
D_tall$hab.stim.order = as.factor(D_tall$hab.stim.order)
D_tall$test.stim.order = as.factor(D_tall$test.stim.order)
D_tall$test.trial.level = as.factor(D_tall$test.trial.level)
names(D_tall)
main_perm_func = function(y){
df = subset(D_tall, ! test.trial.level %in% y)
df$test.trial.level = factor(GBGRVGRGB$test.trial.level)
b = rep(0,5000)
for(i in 1:5000){
y = sample(df$measure, replace=TRUE)
lm_1 = lme(y ~ test.trial.level, random=~1|ID, data=df)
b[i] = fixed.effects(lm_1)[2]
}
lm.fit = lme(measure~test.trial.level, random=~1|ID, data=df)
beta_actual = fixed.effects(lm.fit)[2]
# p value
c(sum(abs(b) > beta_actual)/5000,
sum(abs(b) < beta_actual)/5000)
}
# GBGR V GRGB
main_perm_func(c(3:5))
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(ez)
options(scipen=9999)
# load data
D = read.csv(file.choose(), header = TRUE)
D$med.split.age = rep(0,length(D$age))
for(i in 1:length(D$age)){
compute = ifelse(D$age[i]<=19.02,0,1)
D$med.split.age[i] = compute
}
# add median split for num.hab
D$med.split.num.hab = rep(0, length(D$num.hab))
for(i in 1:length(D$num.hab)){
calc = ifelse(D$num.hab[i]<=5,0,1)
D$med.split.num.hab[i] = calc
}
# remove unneeded columns
D$Partic..= NULL
names(D)
# reorder columns
D = as.data.frame(D[,c(1,2,6,22,3,4,
5,7,23,8,9:21)])
names(D)
D$med.split.age.1 = NULL
names(D)
D_tall = reshape(D, varying = c(18:21,23), v.names = "measure",
timevar = "test.trial.level", idvar = "ID",
direction = "long")
D_tall = D_tall[order(D_tall$ID),]
# FACTORIZE 'SEX'
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("0" = "F", "1"="M"))
# FACTORIZE 'TEST.STIM.ORDER'
D_tall$test.stim.order = revalue(x = as.factor(D_tall$test.stim.order),
c("0" = "1234", "1" = "2413"))
# FACTORIZE 'MED.SPLIT.NUM.HAB'
D_tall$med.split.num.hab = revalue(x = as.factor(D_tall$med.split.num.hab),
c("0" = "Fast Habituators", "1" = "Slow Habituators"))
# FACTORIZE 'GROUP'
D_tall$group = revalue(x = as.factor(D_tall$group),
c("0" = "Red", "1" = "Blue"))
# FACTORIZE 'HAB.STIM.ORDER'
D_tall$hab.stim.order = revalue(x = as.factor(D_tall$hab.stim.order),
c("0" = "12", "1"="21", "2"="34", "3"="43"))
# FACTORIZE 'TEST.TRIAL.LEVEL'
D_tall$test.trial.level = revalue(x = as.factor(D_tall$test.trial.level),
c("1" = "gbgr", "2"="grgb",
"3"="gbrg", "4"="grbg", "5"="Posttest"))
ancova.main.fit = ezANOVA(D_tall, dv = measure, within=test.trial.level,
wid = ID,
between_covariates=age)
print(ancova.main.fit)
names(D_tall)
rm(list=ls())
