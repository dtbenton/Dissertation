theme(strip.text = element_text(colour = 'white')) +
labs(x = "Test trials")
condition_barplot = ggplot(U, aes(med.split.age, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
labs(x = "Test trials")
condition_barplot = ggplot(U, aes(med.split.age, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(strip.background =element_rect(fill='coral2')) +
theme(strip.text = element_text(colour = 'white')) +
labs(x = "Test trials")
condition_barplot = ggplot(U, aes(med.split.age, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
labs(x = "Test trials")
condition_barplot = ggplot(U, aes(med.split.age, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) + # this creates a square around legends
theme(legend.text = element_text(size = 12)) + # this sets the size of the legend text
theme(legend.title=element_blank()) + # this removes the automatic legend title
labs(x = "Test trials")
ondition_barplot = ggplot(U, aes(med.split.age, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(legend.box.background = element_rect(), legend.box.margin = margin(3, 3, 3, 3)) + # this creates a square around legends
theme(legend.text = element_text(size = 12)) + # this sets the size of the legend text
theme(legend.title=element_blank()) + # this removes the automatic legend title
labs(x = "Test trials")
mean(older_df$measure[older_df$test.trial.level==1])
mean(younger_df$measure[younger_df$test.trial.level==1])
mean(D_tall$measure[D_tall$test.trial.level==1])
is.data.frame(younger_df)
fix(younger_df)
names(younger_df)
mean(younger_df$measure)
mean(younger_df$measure[younger_df$test.trial.level==1])
mean(younger_df$measure[younger_df$test.trial.level==2])
mean(younger_df$measure[younger_df$test.trial.level==3])
str(younger_df)
mean(U$measure[U$test.trial.level==1 & U$med.split.age==0])
fix(U)
mean(younger_df$measure[younger_df$test.trial.level=="GBGR"])
mean(younger_df$measure[younger_df$test.trial.level=="GBRG"])
mean(younger_df$measure[younger_df$test.trial.level=="GRBG"])
condition_barplot = ggplot(younger_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
labs(x = "Test trials")
condition_barplot = ggplot(younger_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(older_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
L = D_tall
L = L[order(L$med.split.num.hab),]
# rename levels of 'condition' and 'q.type.cat' factors
L$med.split.num.hab = revalue(x = as.factor(L$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
fast_habituators_df = L[c(1:52),]
slow_habituators_df = L[c(53:100),]
condition_barplot = ggplot(L, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
labs(x = "Test trials")
condition_barplot = ggplot(G, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
labs(x = "Test trials")
G$med.split.num.hab = revalue(x = as.factor(L$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
G$med.split.age = revalue(x = as.factor(G$med.split.age),
c("0" = "Younger (<=18.06)", "1" = "Older (>18.06)"))
G$test.trial.level = revalue(x = as.factor(G$test.trial.level),
c("1" = "GBGR", "2"="GRGB", "3" = "GBRG",
"4" = "GRBG"))
G$med.split.num.hab = revalue(x = as.factor(G$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
G = subset(D_tall, ! test.trial.level %in% c(5))
G = G[order(G$med.split.age),]
G$med.split.age = revalue(x = as.factor(G$med.split.age),
c("0" = "Younger (<=18.06)", "1" = "Older (>18.06)"))
G$test.trial.level = revalue(x = as.factor(G$test.trial.level),
c("1" = "GBGR", "2"="GRGB", "3" = "GBRG",
"4" = "GRBG"))
G$med.split.num.hab = revalue(x = as.factor(G$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
G = subset(D_tall, ! test.trial.level %in% c(5))
G = G[order(G$med.split.num.hab),]
G$med.split.age = revalue(x = as.factor(G$med.split.age),
c("0" = "Younger (<=18.06)", "1" = "Older (>18.06)"))
G$test.trial.level = revalue(x = as.factor(G$test.trial.level),
c("1" = "GBGR", "2"="GRGB", "3" = "GBRG",
"4" = "GRBG"))
G$med.split.num.hab = revalue(x = as.factor(G$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
younger_df = G[c(1:52),]
older_df = G[c(53:100),]
condition_barplot = ggplot(G, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
labs(x = "Test trials")
condition_barplot = ggplot(L, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
labs(x = "Test trials")
G = subset(D_tall, ! test.trial.level %in% c(5))
G = G[order(G$med.split.num.hab),]
G$med.split.age = revalue(x = as.factor(G$med.split.age),
c("0" = "Younger (<=18.06)", "1" = "Older (>18.06)"))
G$test.trial.level = revalue(x = as.factor(G$test.trial.level),
c("1" = "GBGR", "2"="GRGB", "3" = "GBRG",
"4" = "GRBG"))
G$med.split.num.hab = revalue(x = as.factor(G$med.split.num.hab),
c("0" = "Fast Habituators (<=5)", "1" = "Slow Habituators (>5)"))
younger_df = G[c(1:52),]
older_df = G[c(53:100),]
condition_barplot = ggplot(G, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(legend.box.background = element_rect(), legend.box.margin = margin(3, 3, 3, 3)) + # this creates a square around legends
theme(legend.text = element_text(size = 12)) + # this sets the size of the legend text
theme(legend.title=element_blank()) + # this removes the automatic legend title
labs(x = "Test trials")
condition_barplot = ggplot(G, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(legend.box.background = element_rect(), legend.box.margin = margin(3, 3, 3, 3)) + # this creates a square around legends
theme(legend.text = element_text(size = 12)) + # this sets the size of the legend text
theme(legend.title=element_blank()) + # this removes the automatic legend title
labs(x = "Test trials")
fast_hab_df = G[c(1:52),]
slow_hab_df = G[c(53:100),]
fix(G)
condition_barplot = ggplot(slow_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(G, aes(med.split.num.hab, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
#facet_wrap(~q.type.cat, scales="free") + # create as many separate graphs as there are conditions
ylab("Looking time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 18)) +
theme_classic() +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) + # changes colors of individual bars
theme(legend.box.background = element_rect(), legend.box.margin = margin(3, 3, 3, 3)) + # this creates a square around legends
theme(legend.text = element_text(size = 12)) + # this sets the size of the legend text
theme(legend.title=element_blank()) + # this removes the automatic legend title
labs(x = "Test trials")
condition_barplot = ggplot(slow_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = med.split.num.hab)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
scale_fill_manual(values=c("#000000", "#999999")) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
labs(x = "Test trials")
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
scale_fill_manual(values=c("#000000", "#999999")) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
labs(x = "Test trials")
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(slow_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
condition_barplot = ggplot(slow_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
fix(D)
condition_barplot = ggplot(slow_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
fix(D)
chi.slow.data = matrix(c(4,2,6),1)
dimnames(chi.slow.data) = list(c("Slow Habituators"), c("Markov", "Perceptual", "Other"))
## COUNTS
# Older: M=4, P=2,  O = 6
chi.slow.test = chisq.test(chi.slow.data, simulate.p.value = TRUE)
chi.slow.test
condition_barplot = ggplot(fast_hab_df, aes(test.trial.level, measure, fill = test.trial.level)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
facet_wrap(~ID) + # create as many separate graphs as there are conditions
ylab("Looking Time (s)") + # change the label of the y-axis
theme_bw() + # remove the gray background
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + # remove the major and minor grids
scale_y_continuous(expand = c(0, 0)) + # ensure that bars hit the x-axis
coord_cartesian(ylim=c(0, 80)) +
theme(strip.background =element_rect(fill='black')) +
theme(strip.text = element_text(colour = 'white', size = 12, face = "bold")) +
theme(axis.title=element_text(size="12"),axis.text=element_text(size=12)) +
theme(legend.box.background = element_rect(), legend.box.margin = margin(6, 6, 6, 6)) +
theme(legend.text = element_text(size = 12)) +
theme(legend.title=element_blank()) +
scale_fill_manual(values = c("white", "gray81", "gray38", "gray20", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
labs(x = "Test trials")
fix(D)
